# Exemple de pipeline CI/CD GitHub Actions

name: CI/CD Main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint code
        run: echo "Linting code..."

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: echo "Running tests..."

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Build app
        run: echo "Building app..."

  package:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Package app
        run: echo "Packaging app..."

  deploy-staging:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to staging
        run: echo "Deploying to staging..."

  deploy-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: deploy-staging
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to production
        run: echo "Deploying to production..."

  snapshot:
    runs-on: ubuntu-latest
    needs: deploy-prod
    steps:
      - name: Create snapshot
        run: echo "Creating snapshot..."

  rollback:
    runs-on: ubuntu-latest
    steps:
      - name: Rollback procedure
        run: echo "Rollback procedure..."

  update-tag:
    runs-on: ubuntu-latest
    needs: deploy-prod
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # important pour manipuler les tags
      - name: Set or update 'latest' tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag -f latest
          git push origin latest --force
